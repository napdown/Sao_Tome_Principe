dtick = 5,
range=c(20,25)
)
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 2,
range=c(20,25)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 2,
range=c(20,30)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 2,
range=c(20,26)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 2,
range=c(20,28)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 1,
range=c(20,28)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 3,
range=c(20,28)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 5,
range=c(20,28)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 2.5,
range=c(20,28)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
library(raster)
library(rasterVis)
library(reshape)
library(dplyr)
library(lubridate)
library(tidyr)
library(magrittr)
library(R.utils)
library(sf)
library(plotly)
library(ggplot2)
library(rgee)
library(flextable)
library(FAOSTAT)
# GAUL from gee
ee_Initialize()
ee_install()
ee_install()
library(raster)
library(rasterVis)
library(reshape)
library(dplyr)
library(lubridate)
library(tidyr)
library(magrittr)
library(R.utils)
library(sf)
library(plotly)
library(ggplot2)
library(rgee)
library(flextable)
library(FAOSTAT)
ee_install()
ee_clean_pyenv()
ee_clean_pyenv()
ee_install()
library(raster)
library(rasterVis)
library(reshape)
library(dplyr)
library(lubridate)
library(tidyr)
library(magrittr)
library(R.utils)
library(sf)
library(plotly)
library(ggplot2)
library(rgee)
library(flextable)
library(FAOSTAT)
ee_install()
library(raster)
library(rasterVis)
library(reshape)
library(dplyr)
library(lubridate)
library(tidyr)
library(magrittr)
library(R.utils)
library(sf)
library(plotly)
library(ggplot2)
library(rgee)
library(flextable)
library(FAOSTAT)
library(reticulate)
ee_install()
reticulate::repl_python()
pip install earthengine-api
pip install numpy
quit
# GAUL from gee
ee_Initialize()
ee_install(py_env = "rgee")
ee_clean_pyenv()
ee_clean_pyenv()
ee_install(py_env = "rgee")
library(rgee)
library(reticulate)
ee_install(py_env = "rgee")
ee_Initialize(user = 'opennaps@gmail.com', drive = TRUE)
install.packages("gee")
ee_install()
ee_install()
reticulate::py_numpy_available()
install.packages("bookdown")
ee_check()
library(rgee)
ee_check()
ee_install()
# GAUL from gee
ee_Initialize()
# GAUL from gee
ee_Initialize()
library(raster)
library(rasterVis)
library(reshape)
library(dplyr)
library(lubridate)
library(tidyr)
library(magrittr)
library(R.utils)
library(sf)
library(plotly)
library(ggplot2)
library(rgee)
library(flextable)
library(FAOSTAT)
library(reticulate)
ee_install()
library(raster)
library(rasterVis)
library(reshape)
library(dplyr)
library(lubridate)
library(tidyr)
library(magrittr)
library(R.utils)
library(sf)
library(plotly)
library(ggplot2)
library(rgee)
library(flextable)
library(FAOSTAT)
library(reticulate)
ee_install()
ee_clean_pyenv()
ee_clean_pyenv()
ee_install()
ee_check()
reticulate::repl_python()
pip install earthengine-api
pip install numpy
pip install numpy
quit
STP0<-getData('GADM', country='STP', level=0)
STP1<-getData('GADM', country='STP', level=1)
STP2<-getData('GADM', country='STP', level=2)
#getData('ISO3')
STP2.sf<-st_as_sf(STP2)
install.packages(c("rgeos", "rgdal"))
getwd()
STP0<-getData('GADM', country='STP', level=0)
STP1<-getData('GADM', country='STP', level=1)
STP2<-getData('GADM', country='STP', level=2)
#getData('ISO3')
STP2.sf<-st_as_sf(STP2)
STP2.split1<-split(STP2.sf, STP2.sf$NAME_1)
ST<-STP2.split1$`São Tomé`
PCP<-STP2.split1$Príncipe
#plot(STP2.sf$geometry)
STP_regions<-split(STP2.sf, STP2.sf$NAME_2)
pague<-STP_regions$Pagué
grande<-STP_regions$`Água Grande`
cantagalo<-STP_regions$Cantagalo
caue<-STP_regions$Caué
lemba<-STP_regions$Lembá
lobata<-STP_regions$Lobata
zochi<-STP_regions$`Mé-Zóchi`
# GAUL from gee
ee_Initialize()
install.packages("rmarkdown")
install.packages(c("bookdown", "bookdownplus"))
library(raster)
library(rasterVis)
library(reshape)
install.packages("rasterVis")
library(raster)
library(rasterVis)
library(reshape)
library(dplyr)
library(lubridate)
library(tidyr)
library(magrittr)
library(R.utils)
install.packages("R.utils")
library(R.utils)
library(sf)
library(plotly)
library(ggplot2)
library(rgee)
install.packages("rgee")
library(rgee)
library(flextable)
install.packages(c("flextable", "reticulate", "FAOSTAT"))
library(rgee)
library(flextable)
library(FAOSTAT)
library(reticulate)
ee_install()
install.packages("rstudioapi")
ee_install()
y
ee_check()
reticulate::py_numpy_available()
ee_install(py_env = "rgee")
# GAUL from gee
ee_Initialize()
# GAUL from gee
ee_Initialize()
library(rgee)
# GAUL from gee
ee_Initialize()
ee_check()
ee_install()
ee_clean_pyenv()
rgee::ee_check_credentials()
rgee::ee_check_python()
ee_Initialize(user = 'opennaps@gmail.com', drive = TRUE)
library(rgee)
ee_Initialize(user = 'opennaps@gmail.com', drive = TRUE)
pip install earthengine-api
reticulate::repl_python()
pip install earthengine-api
pip install numpy
ee_get_earthengine_path()
quit
ee_get_earthengine_path()
remove.packages("rgee", lib="~/R/win-library/4.1")
remotes::install_github("r-spatial/rgee")
install.packages("remotes")
remotes::install_github("r-spatial/rgee")
install.packages("rgee")
reticulate::install_miniconda()
reticulate::install_miniconda(path = "C:\Users\Makabe")
reticulate::install_miniconda(path = "C:\\Users\\Makabe")
reticulate::install_python(path = "C:\\Users\\Makabe")
reticulate::install_python()
reticulate::install_python(3.10)
reticulate::install_python(3.10, pyenv="C:\\Users\\Makabe")
reticulate::install_python(3.10, force ="C:\\Users\\Makabe")
reticulate::install_python(3.10, force =T)
reticulate::repl_python()
conda create -n r-environment r-essentials r-base
conda activate r-environment
install.packages("wbstats")
library(raster)
library(rasterVis)
library(reshape)
library(dplyr)
library(lubridate)
library(tidyr)
library(magrittr)
library(R.utils)
library(sf)
library(plotly)
library(ggplot2)
library(rgee)
library(flextable)
library(FAOSTAT)
library(reticulate)
install.packages("magick")
library(magick)
ee_Initialize(user = 'opennaps@gmail.com', drive = TRUE)
ee_get_earthengine_path()
ee_clean_pyenv()
ee_check()
conda --help
reticulate::repl_python()
conda --help
quit
reticulate::conda_version()
reticulate::repl_python()
conda create --name ee
quit
# GAUL from gee
ee_Initialize()
# GAUL from gee
ee_Initialize()
reticulate::py_numpy_available()
STP0<-getData('GADM', country='STP', level=0)
STP1<-getData('GADM', country='STP', level=1)
STP2<-getData('GADM', country='STP', level=2)
#getData('ISO3')
STP2.sf<-st_as_sf(STP2)
install.packages(c("rgeos", "rgdal"))
STP0<-getData('GADM', country='STP', level=0)
STP1<-getData('GADM', country='STP', level=1)
STP2<-getData('GADM', country='STP', level=2)
#getData('ISO3')
STP2.sf<-st_as_sf(STP2)
STP2.split1<-split(STP2.sf, STP2.sf$NAME_1)
ST<-STP2.split1$`São Tomé`
PCP<-STP2.split1$Príncipe
#plot(STP2.sf$geometry)
STP_regions<-split(STP2.sf, STP2.sf$NAME_2)
pague<-STP_regions$Pagué
grande<-STP_regions$`Água Grande`
cantagalo<-STP_regions$Cantagalo
caue<-STP_regions$Caué
lemba<-STP_regions$Lembá
lobata<-STP_regions$Lobata
zochi<-STP_regions$`Mé-Zóchi`
# GAUL from gee
ee_Initialize()
admin0<-ee$FeatureCollection("FAO/GAUL/2015/level0")
admin2<-ee$FeatureCollection("FAO/GAUL/2015/level2")
stp0<- admin0$filter(ee$Filter$eq('ADM0_NAME', 'Sao Tome and Principe'))
stp2<- admin2$filter(ee$Filter$eq('ADM0_NAME', 'Sao Tome and Principe'))
stp0_sf<-ee_as_sf(stp0)
install.packages("sf")
stp0_sf<-ee_as_sf(stp0)
library(raster)
library(rasterVis)
library(reshape)
library(dplyr)
library(lubridate)
library(tidyr)
library(magrittr)
library(R.utils)
library(sf)
library(plotly)
library(ggplot2)
library(rgee)
library(flextable)
library(FAOSTAT)
library(reticulate)
library(magick)
stp0_sf<-ee_as_sf(stp0)
install.packages("geojsonio")
stp0_sf<-ee_as_sf(stp0)
STP0<-getData('GADM', country='STP', level=0)
STP1<-getData('GADM', country='STP', level=1)
STP2<-getData('GADM', country='STP', level=2)
#getData('ISO3')
STP2.sf<-st_as_sf(STP2)
STP2.split1<-split(STP2.sf, STP2.sf$NAME_1)
ST<-STP2.split1$`São Tomé`
PCP<-STP2.split1$Príncipe
#plot(STP2.sf$geometry)
STP_regions<-split(STP2.sf, STP2.sf$NAME_2)
pague<-STP_regions$Pagué
grande<-STP_regions$`Água Grande`
cantagalo<-STP_regions$Cantagalo
caue<-STP_regions$Caué
lemba<-STP_regions$Lembá
lobata<-STP_regions$Lobata
zochi<-STP_regions$`Mé-Zóchi`
# GAUL from gee
ee_Initialize()
admin0<-ee$FeatureCollection("FAO/GAUL/2015/level0")
admin2<-ee$FeatureCollection("FAO/GAUL/2015/level2")
stp0<- admin0$filter(ee$Filter$eq('ADM0_NAME', 'Sao Tome and Principe'))
stp2<- admin2$filter(ee$Filter$eq('ADM0_NAME', 'Sao Tome and Principe'))
stp0_sf<-ee_as_sf(stp0)
stp2_sf<-ee_as_sf(stp2)
stp2_split<-split(stp2_sf, stp2_sf$ADM1_NAME)
saoT<-stp2_split$`Sao Tome`
principe<-stp2_split$Principe
remotes::install_github("r-spatial/rgee")
library(raster)
library(rasterVis)
library(reshape)
library(dplyr)
library(lubridate)
library(tidyr)
library(magrittr)
library(R.utils)
library(sf)
library(plotly)
library(ggplot2)
library(rgee)
library(flextable)
library(FAOSTAT)
library(reticulate)
library(magick)
STP0<-getData('GADM', country='STP', level=0)
STP1<-getData('GADM', country='STP', level=1)
STP2<-getData('GADM', country='STP', level=2)
#getData('ISO3')
STP2.sf<-st_as_sf(STP2)
STP2.split1<-split(STP2.sf, STP2.sf$NAME_1)
ST<-STP2.split1$`São Tomé`
PCP<-STP2.split1$Príncipe
#plot(STP2.sf$geometry)
STP_regions<-split(STP2.sf, STP2.sf$NAME_2)
pague<-STP_regions$Pagué
grande<-STP_regions$`Água Grande`
cantagalo<-STP_regions$Cantagalo
caue<-STP_regions$Caué
lemba<-STP_regions$Lembá
lobata<-STP_regions$Lobata
zochi<-STP_regions$`Mé-Zóchi`
# GAUL from gee
ee_Initialize()
admin0<-ee$FeatureCollection("FAO/GAUL/2015/level0")
admin2<-ee$FeatureCollection("FAO/GAUL/2015/level2")
stp0<- admin0$filter(ee$Filter$eq('ADM0_NAME', 'Sao Tome and Principe'))
stp2<- admin2$filter(ee$Filter$eq('ADM0_NAME', 'Sao Tome and Principe'))
stp0_sf<-ee_as_sf(stp0)
stp2_sf<-ee_as_sf(stp2)
stp2_split<-split(stp2_sf, stp2_sf$ADM1_NAME)
saoT<-stp2_split$`Sao Tome`
principe<-stp2_split$Principe
