plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 5,
ticks='none',
range=c(min(df_mon$tmean),max(df_mon$tmean))
)
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = T,
showticklabels=T,
dtick = 5,
ticks='none',
range=c(min(df_mon$tmean),max(df_mon$tmean))
)
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = T,
showticklabels=T,
dtick = 5,
ticks='inside',
range=c(min(df_mon$tmean),max(df_mon$tmean))
)
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 5,
range=c(min(df_mon$tmean),max(df_mon$tmean))
)
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
df_mon$month<-factor(df_mon$month,
levels = c('7','8','9','10','11','12','1','2','3','4','5','6'))
# plot
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 5,
range=c(min(df_mon$tmean),max(df_mon$tmean))
)
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, mode = 'lines+markers',name= 'Temperature', yaxis='y2')%>%
#plotly::add_markers(x= ~Month, y= ~tmean, pch=1,color='#D21919', yaxis='y2', name='')%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=F),width=700, height=450, title='Sao Tome \n (Mean 1958-2020)', yaxis2=ty)
Tmax<-ee$ImageCollection("IDAHO_EPSCOR/TERRACLIMATE")$
select('tmmx')
Tmax_saoT<-ee_extract(x=Tmax, y=saoT, fun=ee$Reducer$mean())
#Tmax_stp2<-ee_extract(x=Tmax, y=stp2_sf, fun=ee$Reducer$mean())
Tmaxlong<-pivot_longer(Tmax_saoT,cols = 13:768,names_to = 'month',values_to = 'tmax')
Tmaxlong$Date<-seq(as.Date('1958-01-01'), by="month", length.out=756)
Tmaxlong$tmax<-Tmaxlong$tmax*0.1
tmax_ann<-Tmaxlong%>%mutate(year=year(Date), month=month(Date))%>%
group_by(year)%>%  summarise(tmax=mean(tmax))
tmax_mon<-Tmaxlong%>%mutate(year=year(Date), month=month(Date))%>%
group_by(month)%>%  summarise(tmax=mean(tmax))
#tmax_ts<-xts(Tmaxlong$tmax,Tmaxlong$Date)
#Tmin
Tmin<-ee$ImageCollection("IDAHO_EPSCOR/TERRACLIMATE")$
select('tmmn')
Tmin_saoT<-ee_extract(x=Tmin, y=saoT, fun=ee$Reducer$mean())
Tmax<-ee$ImageCollection("IDAHO_EPSCOR/TERRACLIMATE")$
select('tmmx')
Tmax_principe<-ee_extract(x=Tmax, y=principe, fun=ee$Reducer$mean())
#Tmax_stp2<-ee_extract(x=Tmax, y=stp2_sf, fun=ee$Reducer$mean())
Tmaxlong<-pivot_longer(Tmax_principe,cols = 13:768,names_to = 'month',values_to = 'tmax')
Tmaxlong$Date<-seq(as.Date('1958-01-01'), by="month", length.out=756)
Tmaxlong$tmax<-Tmaxlong$tmax*0.1
tmax_ann<-Tmaxlong%>%mutate(year=year(Date), month=month(Date))%>%
group_by(year)%>%  summarise(tmax=mean(tmax))
tmax_mon<-Tmaxlong%>%mutate(year=year(Date), month=month(Date))%>%
group_by(month)%>%  summarise(tmax=mean(tmax))
#tmax_ts<-xts(Tmaxlong$tmax,Tmaxlong$Date)
#Tmin
Tmin<-ee$ImageCollection("IDAHO_EPSCOR/TERRACLIMATE")$
select('tmmn')
Tmin_principe<-ee_extract(x=Tmin, y=principe, fun=ee$Reducer$mean())
#Tmin_stp2<-ee_extract(x=Tmin, y=stp2_sf, fun=ee$Reducer$mean())
Tminlong<-pivot_longer(Tmin_principe,cols = 13:768,names_to = 'month',values_to = 'tmin')
Tminlong$Date<-seq(as.Date('1958-01-01'), by="month", length.out=756)
Tminlong$tmin<-Tminlong$tmin*0.1
tmin_ann<-Tminlong%>%mutate(year=year(Date), month=month(Date))%>%
group_by(year)%>%  summarise(tmin=mean(tmin))
tmin_mon<-Tminlong%>%mutate(year=year(Date), month=month(Date))%>%
group_by(month)%>%  summarise(tmin=mean(tmin))
mytemp<-cbind(Tmaxlong[,14:15], Tminlong[,14])
mytemp$tmean<-(mytemp$tmax+mytemp$tmin)/2
#pr
pr<-ee$ImageCollection("IDAHO_EPSCOR/TERRACLIMATE")$
select('pr')
pr_principe<-ee_extract(x=pr, y=principe, fun=ee$Reducer$mean())
#pr_stp2<-ee_extract(x=pr, y=stp2_sf, fun=ee$Reducer$mean())
prlong<-pivot_longer(pr_principe,cols = 13:768,names_to = 'month',values_to = 'pr')
prlong$Date<-seq(as.Date('1958-01-01'), by="month", length.out=756)
pr_ann<-prlong%>%mutate(year=year(Date), month=month(Date))%>%
group_by(year)%>%  summarise(pr=mean(pr))
pr_mon<-prlong%>%mutate(year=year(Date), month=month(Date))%>%
group_by(month)%>%  summarise(pr=mean(pr))
#pr_ts<-xts(prlong$pr,prlong$Date)
#combine pr and temp
pr_temp<-cbind(mytemp,prlong[,14])
df_mon<-pr_temp%>%mutate(year=year(Date), month=month(Date))%>%
group_by(month)%>%  summarise(pr=mean(pr),tmean=mean(tmean))
df_mon$month<-factor(df_mon$month,
levels = c('7','8','9','10','11','12','1','2','3','4','5','6'))
# plot
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 5,
range=c(min(df_mon$tmean),max(df_mon$tmean))
)
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, mode = 'lines+markers',name= 'Temperature', yaxis='y2')%>%
#plotly::add_markers(x= ~Month, y= ~tmean, pch=1,color='#D21919', yaxis='y2', name='')%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=F),width=700, height=450, title='Principe \n (Mean 1958-2020)', yaxis2=ty)
library(flextable)
library(magrittr)
tourists<-readxl::read_excel("Tables_from_NAP.xlsx",
sheet = "tourist_arrivals")
t1<-flextable(tourists,col_keys = names(tourists),
cwidth = 3,
cheight = 0.01,
defaults = list(),
theme_booktabs())
t2<-fontsize(t1,part = 'all', size = 8)
t3<-border_outer(t2,part = 'all', border = NULL)
t4<-border_inner(t3,part = 'all', border = NULL)
t5<-bold(t4,part='header')
t6<-bold(t5, i=6:7)
t6<-merge_at(t6,part = 'header', j=3:5)
t7<-set_caption(t6, "The estimated number of total international tourist arrivals for 2020")
t7<-width(t7, width=0.5)
library(flextable)
library(magrittr)
tourists<-readxl::read_excel("Tables_from_NAP.xlsx",
sheet = "tourist_arrivals")
t1<-flextable(tourists,col_keys = names(tourists),
cwidth = 3,
cheight = 0.01,
defaults = list(),
theme_booktabs())
t2<-fontsize(t1,part = 'all', size = 8)
t3<-border_outer(t2,part = 'all', border = NULL)
t4<-border_inner(t3,part = 'all', border = NULL)
t5<-bold(t4,part='header')
t6<-bold(t5, i=6:7)
t6<-merge_at(t6,part = 'header', j=3:5)
t7<-set_caption(t6, "The estimated number of total international tourist arrivals for 2020")
t7<-width(t7, width=0.5)
t7
tourists<-readxl::read_excel("Tables_from_NAP.xlsx",
sheet = "tourist_arrivals")
t1<-flextable(tourists,col_keys = names(tourists),
cwidth = 3,
cheight = 0.01,
defaults = list(),
theme_booktabs())
t2<-fontsize(t1,part = 'all', size = 8)
t3<-border_outer(t2,part = 'all', border = NULL)
t4<-border_inner(t3,part = 'all', border = NULL)
t5<-bold(t4,part='header')
t6<-bold(t5, i=6:7)
t6<-merge_at(t6,part = 'header', j=3:5)
t7<-set_caption(t6, "The estimated number of total international tourist arrivals for 2020")
t7
library(flextable)
library(magrittr)
tourists<-readxl::read_excel("Tables_from_NAP.xlsx",
sheet = "tourist_arrivals")
t1<-flextable(tourists,col_keys = names(tourists),
cwidth = 3,
cheight = 0.01,
defaults = list(),
theme_booktabs())
t2<-fontsize(t1,part = 'all', size = 8)
t3<-border_outer(t2,part = 'all', border = NULL)
t4<-border_inner(t3,part = 'all', border = NULL)
t5<-bold(t4,part='header')
t6<-bold(t5, i=6:7)
t6<-merge_at(t6,part = 'header', j=3:5)
t7<-set_caption(t6, "The estimated number of total international tourist arrivals for 2020")
t7<-width(t7, width=0.5)
t7
library(flextable)
library(magrittr)
biomass<-readxl::read_excel("Tables_from_NAP.xlsx",
sheet = "biomass_consumption")
t1<-flextable(biomass,col_keys = names(biomass),
cwidth = 3,
cheight = 0.01,
defaults = list(),
theme_booktabs())
t2<-fontsize(t1,part = 'all', size = 8)
t3<-border_outer(t2,part = 'all', border = NULL)
t4<-border_inner(t3,part = 'all', border = NULL)
t5<-bold(t4,part='header')
t6<-set_caption(t6, "Distribution of biomass consumption for the year 2012")
t6
library(flextable)
library(magrittr)
biomass<-readxl::read_excel("Tables_from_NAP.xlsx",
sheet = "biomass_consumption")
t1<-flextable(biomass,col_keys = names(biomass),
cwidth = 3,
cheight = 0.01,
defaults = list(),
theme_booktabs())
t2<-fontsize(t1,part = 'all', size = 8)
t3<-border_outer(t2,part = 'all', border = NULL)
t4<-border_inner(t3,part = 'all', border = NULL)
t5<-bold(t4,part='header')
t6<-set_caption(t6, "Distribution of biomass consumption for the year 2012")
t6
biomass<-readxl::read_excel("Tables_from_NAP.xlsx",
sheet = "biomass_consumption")
t1<-flextable(biomass,col_keys = names(biomass),
cwidth = 1,
cheight = 0.01,
defaults = list(),
theme_booktabs())
t2<-fontsize(t1,part = 'all', size = 8)
t3<-border_outer(t2,part = 'all', border = NULL)
t4<-border_inner(t3,part = 'all', border = NULL)
t5<-bold(t4,part='header')
t6<-set_caption(t6, "Distribution of biomass consumption for the year 2012")
t6
biomass<-readxl::read_excel("Tables_from_NAP.xlsx",
sheet = "biomass_consumption")
t1<-flextable(biomass,col_keys = names(biomass),
cwidth = 0.3,
cheight = 0.01,
defaults = list(),
theme_booktabs())
t2<-fontsize(t1,part = 'all', size = 8)
t3<-border_outer(t2,part = 'all', border = NULL)
t4<-border_inner(t3,part = 'all', border = NULL)
t5<-bold(t4,part='header')
t6<-set_caption(t6, "Distribution of biomass consumption for the year 2012")
t6
biomass<-readxl::read_excel("Tables_from_NAP.xlsx",
sheet = "biomass_consumption")
t1<-flextable(biomass,col_keys = names(biomass),
cwidth = 0.3,
cheight = 0.01,
defaults = list(),
theme_booktabs())
t2<-fontsize(t1,part = 'all', size = 8)
t3<-border_outer(t2,part = 'all', border = NULL)
t4<-border_inner(t3,part = 'all', border = NULL)
t5<-bold(t4,part='header')
t6<-set_caption(t5, "Distribution of biomass consumption for the year 2012")
t6
biomass<-readxl::read_excel("Tables_from_NAP.xlsx",
sheet = "biomass_consumption")
t1<-flextable(biomass,col_keys = names(biomass),
cwidth = 0.3,
cheight = 0.01,
defaults = list(),
theme_booktabs())
t2<-fontsize(t1,part = 'all', size = 8)
t3<-border_outer(t2,part = 'all', border = NULL)
t4<-border_inner(t3,part = 'all', border = NULL)
t5<-bold(t4,part='header')
t6<-set_caption(t5, "Distribution of biomass consumption for the year 2012")
t6
data_folder <- "FAOSTATs"
dir.create(data_folder)
alldata<-FAOsearch()
library(FAOSTAT)
alldata<-FAOsearch()
FAOmetaTable
metadata<-FAOmetaTable
View(metadata)
alldata<-FAOsearch()
FAOsearch()
crop_liv <- get_faostat_bulk(code = "QCL", data_folder = data_folder)
readClipboard()
#saveRDS(production_crops, "FAOSTATs/production_crops_e_all_data.rds")
#production_crops <- readRDS("FAOSTATs/production_crops_e_all_data.rds")
lu<-read.csv("C:\\Workspace\\RMardown_NAPS\\Open-NAPs-Data\\opennaps\\Sao_Tome_Principe\\FAOSTATs\\STP_landuse_FAOSTAT")
#saveRDS(production_crops, "FAOSTATs/production_crops_e_all_data.rds")
#production_crops <- readRDS("FAOSTATs/production_crops_e_all_data.rds")
lu<-read.csv("C:\\Workspace\\RMardown_NAPS\\Open-NAPs-Data\\opennaps\\Sao_Tome_Principe\\FAOSTATs\\STP_landuse_FAOSTAT")
STP_landuse_FAOSTAT <- read.csv("C:/Workspace/RMardown_NAPS/Open-NAPs-Data/opennaps/Sao_Tome_Principe/FAOSTATs/STP_landuse_FAOSTAT.csv", stringsAsFactors=TRUE)
View(STP_landuse_FAOSTAT)
#saveRDS(production_crops, "FAOSTATs/production_crops_e_all_data.rds")
#production_crops <- readRDS("FAOSTATs/production_crops_e_all_data.rds")
lu<-read.csv("C:/Workspace/RMardown_NAPS/Open-NAPs-Data/opennaps/Sao_Tome_Principe/FAOSTATs/STP_landuse_FAOSTAT.csv", stringsAsFactors=TRUE)
View(lu)
lu$Item
forest<-lu%>%dplyr::filter(item=='Forest land'|item=='Naturally regenerating forest'|item=='Planted Forest'|item=='Primary Forest')
forest<-lu%>%dplyr::filter(Item=='Forest land'|Item=='Naturally regenerating forest'|Item=='Planted Forest'|Item=='Primary Forest')
View(forest)
mplot<-ggplot2::ggplot(forest,aes(x=Year, y=value, fill=Item))+
ggtitle('Annual Maize Production in Malawi 1961-2020')+
xlab('Year')+ylab('Yield (mt/ha)\'000')+
geom_line(col='red')+
#geom_point(col='red')+
theme_grey()
plotly::ggplotly(mplot)
mplot<-ggplot2::ggplot(forest,aes(x=Year, y=Value, fill=Item))+
ggtitle('Annual Maize Production in Malawi 1961-2020')+
xlab('Year')+ylab('Yield (mt/ha)\'000')+
geom_line(col='red')+
#geom_point(col='red')+
theme_grey()
plotly::ggplotly(mplot)
forest<-lu%>%dplyr::filter(Item=='Forest land'|Item=='Naturally regenerating forest'|Item=='Planted Forest'|Item=='Primary Forest')%>%group_by(Year)%>%summarise('value'=sum(Value))
mplot<-ggplot2::ggplot(forest,aes(x=Year, y=value, fill=Item))+
ggtitle('Annual Maize Production in Malawi 1961-2020')+
xlab('Year')+ylab('Yield (mt/ha)\'000')+
geom_line(col='red')+
#geom_point(col='red')+
theme_grey()
plotly::ggplotly(mplot)
forest<-lu%>%dplyr::filter(Item=='Forest land'|Item=='Naturally regenerating forest'|Item=='Planted Forest'|Item=='Primary Forest')%>%group_by(Year, Item)%>%summarise('value'=sum(Value))
mplot<-ggplot2::ggplot(forest,aes(x=Year, y=value, fill=Item))+
ggtitle('Annual Maize Production in Malawi 1961-2020')+
xlab('Year')+ylab('Yield (mt/ha)\'000')+
geom_line(col='red')+
#geom_point(col='red')+
theme_grey()
plotly::ggplotly(mplot)
mplot<-ggplot2::ggplot(forest,aes(x=Year, y=value, color=Item))+
ggtitle('Annual Maize Production in Malawi 1961-2020')+
xlab('Year')+ylab('Yield (mt/ha)\'000')+
geom_line(col='red')+
#geom_point(col='red')+
theme_grey()
plotly::ggplotly(mplot)
mplot<-ggplot2::ggplot(forest,aes(x=Year, y=value, color=Item))+
ggtitle('Annual Maize Production in Malawi 1961-2020')+
xlab('Year')+ylab('Yield (mt/ha)\'000')+
geom_line()+
#geom_point(col='red')+
theme_grey()
plotly::ggplotly(mplot)
lu$Unit
forest<-lu%>%dplyr::filter(Item=='Forest land'|Item=='Naturally regenerating forest'|Item=='Planted Forest'|Item=='Primary Forest')
forest<-lu%>%dplyr::filter(Item=='Naturally regenerating forest'|Item=='Planted Forest'|Item=='Primary Forest')%>%group_by(Year, Item)%>%summarise('value'=sum(Value))
mplot<-ggplot2::ggplot(forest,aes(x=Year, y=value, color=Item))+
ggtitle('Annual Maize Production in Malawi 1961-2020')+
xlab('Year')+ylab('Yield (mt/ha)\'000')+
geom_line()+
#geom_point(col='red')+
theme_grey()
plotly::ggplotly(mplot)
mplot<-ggplot2::ggplot(forest,aes(x=Year, y=value, color=Item))+
ggtitle('Annual Forest trend 1961-2020')+
xlab('Year')+ylab('Units (000 ha)')+
geom_line()+
#geom_point(col='red')+
theme_grey()
plotly::ggplotly(mplot)
#Item=='Naturally regenerating forest'|Item=='Planted Forest'|
forest<-lu%>%dplyr::filter(Item=='Primary Forest')%>%group_by(Year, Item)%>%summarise('value'=sum(Value))
mplot<-ggplot2::ggplot(forest,aes(x=Year, y=value, color=Item))+
ggtitle('Annual Forest trend 1961-2020')+
xlab('Year')+ylab('Units (000 ha)')+
geom_line()+
#geom_point(col='red')+
theme_grey()
plotly::ggplotly(mplot)
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 5,
range=c(20,25)
)
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 2,
range=c(20,25)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 2,
range=c(20,30)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 2,
range=c(20,26)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 2,
range=c(20,28)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 1,
range=c(20,28)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 3,
range=c(20,28)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 5,
range=c(20,28)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
# sec. axis
ty<-list(overlaying = "y",
side = "right",
title = "Temperature (°C)",
autotick = F,
showticklabels=T,
dtick = 2.5,
range=c(20,28)
)
# plot
plotly::plot_ly(type= 'bar', data= df_mon, x= ~month, y= ~pr, name = 'Precipitation')%>%
plotly::add_lines(x= ~month, y= ~tmean, name= 'Temperature', yaxis='y2')%>%
plotly::add_markers(x= ~month, y= ~tmean, color='#D21919', yaxis='y2', name='', showlegend=F)%>%
plotly::layout(legend=list(orientation='h', y=-0.08,x=0.7), yaxis=list(title='Precipitation (mm)',showticklables=T), title='Sao Tome and Principe \n (Mean 1958-2020)', yaxis2=ty)
